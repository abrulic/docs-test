"var Component=(()=>{var g=Object.create;var o=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var w=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var v=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),m=(r,e)=>{for(var i in e)o(r,i,{get:e[i],enumerable:!0})},h=(r,e,i,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of f(e))!p.call(r,l)&&l!==i&&o(r,l,{get:()=>e[l],enumerable:!(t=u(e,l))||t.enumerable});return r};var b=(r,e,i)=>(i=r!=null?g(w(r)):{},h(e||!r||!r.__esModule?o(i,\"default\",{value:r,enumerable:!0}):i,r)),y=r=>h(o({},\"__esModule\",{value:!0}),r);var c=v((C,d)=>{d.exports=_jsx_runtime});var T={};m(T,{default:()=>a});var n=b(c());function s(r){let e={code:\"code\",h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",ul:\"ul\",...r.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"As with the client configuration, we will first see the full configuration type:\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:\"language-ts\",children:`interface ReactRouterServerConfig {\n  silent?: boolean;\n  logs?: {\n    cookies?: boolean;\n    defer?: boolean;\n    actions?: boolean;\n    loaders?: boolean;\n    cache?: boolean;\n    siteClear?: boolean;\n    serverTimings?: boolean;\n  };\n}\n`})}),`\n`,(0,n.jsx)(e.h2,{id:\"silent\",children:(0,n.jsx)(e.code,{children:\"silent\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),\", the server will not log anything to the console. This is useful for production environments.\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"logs\",children:(0,n.jsx)(e.code,{children:\"logs\"})}),`\n`,(0,n.jsxs)(e.p,{children:[`This object allows you to configure the server logs. Each key is a log type and the value is a boolean indicating whether to log that type.\nAll are `,(0,n.jsx)(e.code,{children:\"true\"}),\" by default so you don't have to provide anything, if you want to be granular you can, otherwise you can use the \",(0,n.jsx)(e.code,{children:\"silent\"}),` option to turn off\nall logs.`]}),`\n`,(0,n.jsx)(e.h3,{id:\"cookies\",children:(0,n.jsx)(e.code,{children:\"cookies\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),', the server will log all cookies sent by the server in the \"Set-Cookie\" header.']}),`\n`,(0,n.jsx)(e.h3,{id:\"defer\",children:(0,n.jsx)(e.code,{children:\"defer\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),`, the server will log all deferred actions.\nThe following gets logged:`]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:\"The defer location\"}),`\n`,(0,n.jsx)(e.li,{children:\"The keys that were deferred\"}),`\n`,(0,n.jsx)(e.li,{children:\"The time it took for each key to resolve\"}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"actions\",children:(0,n.jsx)(e.code,{children:\"actions\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),\", the server will log all actions that are hit with a request.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"loaders\",children:(0,n.jsx)(e.code,{children:\"loaders\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),\", the server will log all loaders that are hit with a request.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"cache\",children:(0,n.jsx)(e.code,{children:\"cache\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),\", the server will log all loaders/actions that return a \",(0,n.jsx)(e.code,{children:\"Cache Control\"}),\" header.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"siteclear\",children:(0,n.jsx)(e.code,{children:\"siteClear\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),\", the server will log when the site cache is cleared, or anything else with the \",(0,n.jsx)(e.code,{children:\"Clear-Site-Data\"}),\" header.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"servertimings\",children:(0,n.jsx)(e.code,{children:\"serverTimings\"})}),`\n`,(0,n.jsxs)(e.p,{children:[\"When \",(0,n.jsx)(e.code,{children:\"true\"}),\", the server will log all server timings that are returned with a request\"]}),`\n`,(0,n.jsx)(e.h2,{id:\"servertimingthreshold\",children:(0,n.jsx)(e.code,{children:\"serverTimingThreshold\"})}),`\n`,(0,n.jsx)(e.p,{children:`This option is used to set the threshold for server timings to be logged in the console.\nIf the server timing is greater than this threshold, it will be logged in red, otherwise it will be logged in green.`}),`\n`,(0,n.jsxs)(e.p,{children:[\"By default it is set to \",(0,n.jsx)(e.code,{children:\"Number.POSITIVE_INFINITY\"}),\" which means that all server timings will be logged in green.\"]})]})}function a(r={}){let{wrapper:e}=r.components||{};return e?(0,n.jsx)(e,{...r,children:(0,n.jsx)(s,{...r})}):s(r)}return y(T);})();\n;return Component;"