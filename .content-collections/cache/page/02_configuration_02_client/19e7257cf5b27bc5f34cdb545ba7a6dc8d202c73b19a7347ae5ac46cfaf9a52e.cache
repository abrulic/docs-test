"var Component=(()=>{var p=Object.create;var r=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var y=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var i in e)r(n,i,{get:e[i],enumerable:!0})},h=(n,e,i,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let l of f(e))!b.call(n,l)&&l!==i&&r(n,l,{get:()=>e[l],enumerable:!(o=g(e,l))||o.enumerable});return n};var w=(n,e,i)=>(i=n!=null?p(m(n)):{},h(e||!n||!n.__esModule?r(i,\"default\",{value:n,enumerable:!0}):i,n)),x=n=>h(r({},\"__esModule\",{value:!0}),n);var a=y((R,d)=>{d.exports=_jsx_runtime});var T={};v(T,{default:()=>u});var t=w(a());function s(n){let e={code:\"code\",h2:\"h2\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...n.components},{InfoAlert:i,WarningAlert:o}=e;return i||c(\"InfoAlert\",!0),o||c(\"WarningAlert\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i,{children:(0,t.jsxs)(e.p,{children:[\"All of the following options can be set in the dev tools panel \",(0,t.jsx)(e.strong,{children:'\"Settings page\"'}),` and they override the default ones. Your preferences are\nstored in localStorage and if they do not exist there the default ones are used.`]})}),`\n`,(0,t.jsx)(e.p,{children:\"Before explaining all the possible options here is the client configuration Typescript type:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`type RdtClientConfig = {\n    position: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\" | \"middle-left\" | \"middle-right\";\n    liveUrls: { name: string, url: string }[];\n    liveUrlsPosition: \"top-left\" | \"top-right\" | \"bottom-left\" | \"bottom-right\";\n    defaultOpen: boolean;\n    expansionLevel: number;\n    height: number;\n    minHeight: number;\n    maxHeight: number;\n    hideUntilHover: boolean;\n    panelLocation: \"top\" | \"bottom\";\n    requireUrlFlag: boolean;\n    urlFlag: string;\n    breakpoints: {name: string, min: number, max: number }[],\n    routeBoundaryGradient: \"sea\" | \"hyper\" | \"gotham\" | \"gray\" | \"watermelon\" | \"ice\" | \"silver\";\n    showBreakpointIndicator: boolean;\n    showRouteBoundariesOn: \"hover\" | \"click\";\n}\n`})}),`\n`,(0,t.jsx)(e.p,{children:\"Let's go through each option and see what it does.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"live-urls\",children:\"Live URLs\"}),`\n`,(0,t.jsx)(e.p,{children:`This option is used to set the live urls that will be displayed in the bottom left corner of the screen. The default value is an empty array.\nIt allows you to specify multiple live urls that you can use to open the current page in a new tab.`}),`\n`,(0,t.jsx)(e.h2,{id:\"live-urls-position\",children:\"Live URLs position\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the position of the live urls that will be displayed in the bottom left corner of the screen. The possible values are:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"top-left\"}),\" - the live urls will be positioned at the top left corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"top-right\"}),\" - the live urls will be positioned at the top right corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"bottom-left\"}),\" - the live urls will be positioned at the bottom left corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"bottom-right\"}),\" - the live urls will be positioned at the bottom right corner of the screen\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"position\",children:\"Position\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the position of the React Router Devtools trigger (the button that opens the panel). The possible values are:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"top-left\"}),\" - the trigger will be positioned at the top left corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"top-right\"}),\" - the trigger will be positioned at the top right corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"bottom-left\"}),\" - the trigger will be positioned at the bottom left corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"bottom-right\"}),\" - the trigger will be positioned at the bottom right corner of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"middle-left\"}),\" - the trigger will be positioned at the middle left of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"middle-right\"}),\" - the trigger will be positioned at the middle right of the screen\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"default-open\",children:\"Default Open\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This option is used to set the initial state of the panel. If set to \",(0,t.jsx)(e.code,{children:\"true\"}),\" the panel will be open by default, if set to \",(0,t.jsx)(e.code,{children:\"false\"}),`\nthe panel will be closed by default.`]}),`\n`,(0,t.jsx)(e.h2,{id:\"expansion-level\",children:\"Expansion Level\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This option is used to set the initial expansion level of the returned JSON data in the \",(0,t.jsx)(e.strong,{children:\"Active Page\"}),` tab. By default it is set to\n1 and if you open up the `,(0,t.jsx)(e.strong,{children:\"Active Page\"}),\" and look at the returned loader data it will look like this:\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`\"data\": { ... } +\n`})}),`\n`,(0,t.jsx)(e.p,{children:\"If you set the expansion level to 1 the returned loader data will look like this:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`\"data\": {\n    \"property\": \"value\"\n}\n`})}),`\n`,(0,t.jsx)(e.h2,{id:\"height\",children:\"Height\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the initial height of the panel. The default value is 400px.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"min-height\",children:\"Min Height\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the minimum height of the panel. The default value is 200px.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"max-height\",children:\"Max Height\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the maximum height of the panel. The default value is 800px.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"hide-until-hover\",children:\"Hide Until Hover\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This option is used to set whether the trigger should be hidden until you hover over it. The default value is \",(0,t.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"panel-location\",children:\"Panel Location\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the location of the panel. The possible values are:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"top\"}),\" - the panel will be positioned at the top of the screen\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:\"bottom\"}),\" - the panel will be positioned at the bottom of the screen\"]}),`\n`]}),`\n`,(0,t.jsx)(e.h2,{id:\"require-url-flag\",children:\"Require URL Flag\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This option is used to set whether the panel should be opened only if the URL contains a specific flag. The default value is \",(0,t.jsx)(e.code,{children:\"false\"}),\".\"]}),`\n`,(0,t.jsxs)(o,{title:\"Be careful!\",children:[(0,t.jsxs)(e.p,{children:[\"If you set this option to \",(0,t.jsx)(e.code,{children:\"true\"}),` and you forget to set the URL flag, the panel will hide and you will not be able to see it\nuntil you enter the url flag.`]}),(0,t.jsxs)(e.p,{children:[\"The default one is \",(0,t.jsx)(e.code,{children:\"rdt=true\"}),\" and if you set this option to \",(0,t.jsx)(e.code,{children:\"true\"}),\" you will have to add \",(0,t.jsx)(e.code,{children:\"?rdt=true\"}),\" to the URL in order to see the panel.\"]})]}),`\n`,(0,t.jsx)(e.h2,{id:\"url-flag\",children:\"URL Flag\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This option is used to set the URL flag that is required to open the panel. The default value is \",(0,t.jsx)(e.code,{children:\"rdt\"}),\".\"]}),`\n`,(0,t.jsxs)(e.p,{children:[\"You can set it to whatever you wish and if you set the \",(0,t.jsx)(e.strong,{children:\"Require URL Flag\"}),\" option to \",(0,t.jsx)(e.code,{children:\"true\"}),\" you will have to add \",(0,t.jsx)(e.code,{children:\"?yourFlag=true\"}),\" to the URL in order to see the panel.\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"route-boundary-gradient\",children:\"Route Boundary Gradient\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option is used to set the color of the route boundary gradient. The possible values are:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"sea\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"hyper\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"gotham\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"gray\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"watermelon\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"ice\"})}),`\n`,(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:\"silver\"})}),`\n`]}),`\n`,(0,t.jsx)(i,{children:(0,t.jsxs)(e.p,{children:[\"This changes the color of the route boundary gradient in the \",(0,t.jsx)(e.strong,{children:\"Active Page\"}),\" tab. When you hover over any route in the panel it will show you it's boundaries.\"]})}),`\n`,(0,t.jsxs)(e.p,{children:[\"The default value is \",(0,t.jsx)(e.code,{children:\"ice\"}),\".\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"breakpoints\",children:\"Breakpoints\"}),`\n`,(0,t.jsx)(e.p,{children:`This option allows you to define custom breakpoints that show in the bottom left corner of the panel to help you determine the current screen breakpoint you have defined.\nBy default the breakpoints are set to tailwind breakpoints but you can change them to whatever you want.`}),`\n`,(0,t.jsx)(e.p,{children:\"Eg:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`    breakpoints: [{name: \"lg\", min: 0, max: 768}, {name: \"xl\", min: 768, max: 1024}, {name: \"2xl\", min: 1024, max: Infinity}],\n`})}),`\n`,(0,t.jsx)(e.h2,{id:\"show-breakpoint-indicator\",children:\"Show breakpoint indicator\"}),`\n`,(0,t.jsx)(e.p,{children:\"This option allows you to show/hide the current breakpoint in the bottom left corner of the panel.\"}),`\n`,(0,t.jsx)(e.h2,{id:\"show-route-boundaries-on\",children:\"Show route boundaries on\"}),`\n`,(0,t.jsx)(e.p,{children:`This option allows you to either show route boundaries when you hover a route segment on the pages tab or\nit shows a dedicated button called \"Show Route Boundary\" that shows the route boundary for that route on click.`}),`\n`,(0,t.jsxs)(e.p,{children:[\"Default value is \",(0,t.jsx)(e.code,{children:\"click\"}),\";\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"creating-a-custom-configuration\",children:\"Creating a custom configuration\"}),`\n`,(0,t.jsx)(e.p,{children:\"To create a custom configuration you can use the following code snippet:\"}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`import { defineRdtConfig } from \"react-router-devtools\";\n\nconst customConfig = defineRdtConfig({\n  client: {\n    position: \"top-right\",\n    defaultOpen: true,\n    expansionLevel: 1,\n    height: 500,\n    minHeight: 300,\n    maxHeight: 1000,\n    hideUntilHover: true,\n    panelLocation: \"bottom\",\n    requireUrlFlag: true,\n    urlFlag: \"customFlag\",\n    routeBoundaryGradient: \"gotham\",\n    breakpoints: [{name: \"lg\", min: 0, max: 768}, {name: \"xl\", min: 768, max: 1024}, {name: \"2xl\", min: 1024, max: Infinity}],\n    showBreakpointIndicator: false\n  }\n});\n\nexport default customConfig;\n`})}),`\n`,(0,t.jsxs)(e.p,{children:[\"Then you can use this configuration in your \",(0,t.jsx)(e.code,{children:\"vite.config.js\"}),\" file like this:\"]}),`\n`,(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:\"language-ts\",children:`import customConfig from \"./rdt.config\";\nimport { reactRouterDevTools } from \"react-router-devtools\";\n\nexport default defineConfig({\n  plugins: [reactRouterDevTools(customConfig)],\n});\n`})}),`\n`,(0,t.jsx)(i,{title:\"Try it out!\",children:(0,t.jsx)(e.p,{children:\"Try opening up the dev tools panel deployed on this site and playing around with the settings in the settings tab!\"})})]})}function u(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(s,{...n})}):s(n)}function c(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return x(T);})();\n;return Component;"