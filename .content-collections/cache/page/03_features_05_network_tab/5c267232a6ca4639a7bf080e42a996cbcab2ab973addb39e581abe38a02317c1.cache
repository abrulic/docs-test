"var Component=(()=>{var c=Object.create;var s=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames;var y=Object.getPrototypeOf,p=Object.prototype.hasOwnProperty;var b=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),m=(n,e)=>{for(var r in e)s(n,r,{get:e[r],enumerable:!0})},a=(n,e,r,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of q(e))!p.call(n,i)&&i!==r&&s(n,i,{get:()=>e[i],enumerable:!(o=f(e,i))||o.enumerable});return n};var g=(n,e,r)=>(r=n!=null?c(y(n)):{},a(e||!n||!n.__esModule?s(r,\"default\",{value:n,enumerable:!0}):r,n)),w=n=>a(s({},\"__esModule\",{value:!0}),n);var d=b((_,l)=>{l.exports=_jsx_runtime});var k={};m(k,{default:()=>u});var t=g(d());function h(n){let e={code:\"code\",h2:\"h2\",li:\"li\",p:\"p\",strong:\"strong\",ul:\"ul\",...n.components},{InfoAlert:r}=e;return r||x(\"InfoAlert\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.p,{children:\"The Network tab traces all the network requests that are happening in your application.\"}),`\n`,(0,t.jsx)(e.p,{children:\"It shows you all the requests in real-time, with the ability to see if they are aborted, if they are cached, and if they are successful or not.\"}),`\n`,(0,t.jsxs)(e.p,{children:[`Clicking on a request will show you detailed information about that request. Additionally, you can shuffle through the requests with your keyboard.\nTo shuffle through the requests, press the `,(0,t.jsx)(e.code,{children:\"\\u2190\"}),\" and \",(0,t.jsx)(e.code,{children:\"\\u2192\"}),\" keys.\"]}),`\n`,(0,t.jsx)(e.h2,{id:\"request-types\",children:\"Request types\"}),`\n`,(0,t.jsx)(e.p,{children:\"There are four types of requests in react-router-devtools:\"}),`\n`,(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"client-loader\"}),\" - A client-loader is a request that is initiated by the client and is used to load data for a route.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"client-action\"}),\" - A client-action is a request that is initiated by the client and is used to submit data to a route.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"loader\"}),\" - A loader is a request that is initiated by the server and is used to load data for a route.\"]}),`\n`,(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.strong,{children:\"action\"}),\" - An action is a request that is initiated by the server and is used to submit data to a route.\"]}),`\n`]}),`\n`,(0,t.jsxs)(r,{children:[(0,t.jsx)(e.p,{children:\"Each of these is colored differently for you to be able to quickly identify them.\"}),(0,t.jsxs)(e.ul,{children:[`\n`,(0,t.jsx)(e.li,{children:\"loader - green\"}),`\n`,(0,t.jsx)(e.li,{children:\"client-loader - blue\"}),`\n`,(0,t.jsx)(e.li,{children:\"action - purple\"}),`\n`,(0,t.jsx)(e.li,{children:\"client-action - yellow\"}),`\n`,(0,t.jsx)(e.li,{children:\"aborted requests - red\"}),`\n`]})]}),`\n`,(0,t.jsx)(e.h2,{id:\"request-info\",children:\"Request info\"}),`\n`,(0,t.jsx)(e.p,{children:`Clicking on any request name will show you detailed information about that request. This includes the request's name, the\nrequest's method, the request's status, the request's start time, the request's end time, the request's type,\nthe request's data, the request's headers, and if the request's cached.`}),`\n`,(0,t.jsx)(e.h2,{id:\"aborted-requests\",children:\"Aborted requests\"}),`\n`,(0,t.jsx)(e.p,{children:\"If a request is aborted, it will be shown in red. This means that the request was aborted by the user.\"})]})}function u(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(h,{...n})}):h(n)}function x(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return w(k);})();\n;return Component;"